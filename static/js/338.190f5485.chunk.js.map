{"version":3,"file":"static/js/338.190f5485.chunk.js","mappings":"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","sources":["components/App/App.styled.jsx","components/ContactForm/ContactForm.styled.jsx","components/redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/redux/filters/selectors.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/ContactAmount/ContactAmount.styled.jsx","components/ContactAmount/ContactAmount.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","pages/contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 30px;\n  margin-bottom: 30px;\n`;\n\nconst MainTitle = styled.h1`\n  margin-bottom: 30px;\n  text-transform: uppercase;\n  color: #3498db;\n`;\n\nconst SecondTitle = styled.h2`\n  margin-bottom: 30px;\n  text-transform: uppercase;\n  color: #3498db;\n`;\n\nconst OvalWrapper = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-40px, -40px);\n`;\n\nexport { AppContainer, MainTitle, SecondTitle, OvalWrapper };\n","import styled from '@emotion/styled';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nconst FormWrapper = styled.div`\n  margin-bottom: 40px;\n`;\n\nconst FormInputLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin: 20px 20px 0px 20px;\n  font-size: 24px;\n`;\n\nconst FormSubmitBtn = styled.button`\n  display: inline-block;\n  width: 160px;\n  height: 50px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  font-size: 18px;\n  text-transform: uppercase;\n  border: 0px;\n  border-radius: 20px;\n  background-color: #3498db;\n  color: white;\n  box-shadow: none;\n  transition: all 250ms ease-in-out;\n\n  :hover,\n  :focus {\n    background-color: #39b0ff;\n    box-shadow: 0px 4px 4px #00000026, inset 0px 0px 0px 0px #0000004d;\n  }\n`;\n\nconst StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  width: 350px;\n\n  border: 1px solid darkgray;\n  border-radius: 5px;\n  background-color: white;\n  box-shadow: 0px 2px 10px -3px;\n`;\n\nconst StyledField = styled(Field)`\n  width: 300px;\n  margin-top: 4px;\n  padding: 4px;\n  font-size: 16px;\n  border: 2px solid #3498db;\n  border-radius: 5px;\n  background-color: ghostwhite;\n`;\n\nconst StyledErrorMessage = styled(ErrorMessage)`\n  margin-top: 10px;\n\n  font-size: 14px;\n  font-weight: 600;\n\n  color: red;\n`;\n\nexport {\n  FormWrapper,\n  FormInputLabel,\n  FormSubmitBtn,\n  StyledForm,\n  StyledField,\n  StyledErrorMessage,\n};\n","const selectContacts = state => state.contacts.items;\n\nconst selectIsLoading = state => state.contacts.isLoading;\n\nconst selectError = state => state.contacts.error;\n\nexport { selectContacts, selectIsLoading, selectError };\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport {\n  FormWrapper,\n  FormInputLabel,\n  FormSubmitBtn,\n  StyledForm,\n  StyledField,\n  StyledErrorMessage,\n} from './ContactForm.styled';\n\nimport { toastifyMessage } from 'service';\nimport { contactsSelectors, contactsOperations } from '../redux/contacts';\n\nconst addContactSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(70, 'Too Long!')\n    .required('A name is required'),\n  number: Yup.number('Please, enter a number')\n    .integer(\"A phone number can't include a decimal point\")\n    .positive(\"A phone number can't start with a minus\")\n    .required('A phone number is required'),\n});\n\nexport default function ContactForm() {\n  const contacts = useSelector(contactsSelectors.selectContacts);\n  const isLoading = useSelector(contactsSelectors.selectIsLoading);\n  const dispatch = useDispatch();\n\n  const handleFormSubmit = (newContact, { resetForm }) => {\n    const { name } = newContact;\n\n    if (\n      contacts.length !== 0 &&\n      contacts.find(\n        contact =>\n          contact.name.toLowerCase().trim() === name.toLowerCase().trim()\n      )\n    ) {\n      toastifyMessage.toastWarn(`${name} is already in contacts`);\n\n      return;\n    }\n\n    dispatch(contactsOperations.fetchAddContacts(newContact));\n    resetForm();\n  };\n\n  return (\n    <>\n      <FormWrapper>\n        <Formik\n          initialValues={{ name: '', number: '' }}\n          validationSchema={addContactSchema}\n          onSubmit={handleFormSubmit}\n        >\n          <StyledForm>\n            <FormInputLabel>\n              Name\n              <StyledField name=\"name\" type=\"text\" placeholder=\"John Wick\" />\n              <StyledErrorMessage component=\"div\" name=\"name\" />\n            </FormInputLabel>\n            <FormInputLabel>\n              Phone number\n              <StyledField\n                name=\"number\"\n                type=\"tel\"\n                placeholder=\"+380501234567\"\n              />\n              <StyledErrorMessage component=\"div\" name=\"number\" />\n            </FormInputLabel>\n            <FormSubmitBtn type=\"submit\" disabled={isLoading}>\n              Add contact\n            </FormSubmitBtn>\n          </StyledForm>\n        </Formik>\n      </FormWrapper>\n    </>\n  );\n}\n","import styled from '@emotion/styled';\n\nconst FilterWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  border: 1px solid darkgray;\n  background-color: white;\n  box-shadow: 0px 2px 10px -3px;\n  border-radius: 5px;\n  width: 354px;\n`;\n\nconst FilterInputLabel = styled.label`\n  margin: 10px 20px 10px 20px;\n  font-size: 18px;\n`;\n\nconst FilterInput = styled.input`\n  width: 300px;\n  margin-top: 4px;\n  padding: 4px;\n  font-size: 16px;\n  border: 2px solid #3498db;\n  border-radius: 5px;\n  background-color: ghostwhite;\n`;\n\nexport { FilterWrapper, FilterInputLabel, FilterInput };","import { createSelector } from '@reduxjs/toolkit';\n\nimport { contactsSelectors } from '../contacts';\n\nconst selectFilter = state => state.filter;\n\nconst selectFilteredContacts = createSelector(\n  [contactsSelectors.selectContacts, selectFilter],\n  (contacts, valueFilter) => {\n    const normalizedFilterQuery = valueFilter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilterQuery)\n    );\n  }\n);\n\nexport { selectFilter, selectFilteredContacts };\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { nanoid } from 'nanoid';\n\nimport { FilterWrapper, FilterInputLabel, FilterInput } from './Filter.styled';\nimport { filterContact } from 'components/redux/filters/filterSlice';\nimport { filterSelectors } from 'components/redux/filters';\n\nexport default function Filter() {\n  const filter = useSelector(filterSelectors.selectFilter);\n  const dispatch = useDispatch();\n\n  const onChangeFilter = e => {\n    dispatch(filterContact(e.currentTarget.value));\n  };\n\n  const inputId = nanoid();\n  return (\n    <FilterWrapper>\n      <FilterInputLabel htmlFor={inputId}>\n        Find contacts by name:\n        <FilterInput\n          type=\"text\"\n          value={filter}\n          id={inputId}\n          onChange={onChangeFilter}\n        />\n      </FilterInputLabel>\n    </FilterWrapper>\n  );\n}\n","import styled from '@emotion/styled';\n\nconst PhonebookList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 460px;\n  margin-top: 10px;\n  padding: 0;\n\n  border: 1px solid darkgray;\n  border-radius: 5px;\n  background-color: white;\n\n  list-style: none;\n  box-shadow: 0px 2px 10px -3px;\n`;\n\nconst ListElement = styled.li`\n  :first-of-type {\n    padding-top: 20px;\n  }\n\n  :last-child {\n    padding-bottom: 20px;\n  }\n\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nconst ContactItemWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  width: 420px;\n  height: 50px;\n  border: 1px solid darkgray;\n  border-radius: 5px;\n  background-color: white;\n`;\n\nconst ContactItemName = styled.p`\n  margin-left: 20px;\n  font-size: 18px;\n`;\n\nconst ContactItemNum = styled.a`\n  margin-left: auto;\n  font-size: 18px;\n  text-decoration: none;\n  transition: all 250ms ease-in-out;\n\n  :hover,\n  :focus {\n    color: #39b0ff;\n  }\n`;\n\nconst DeleteBtn = styled.button`\n  display: inline-block;\n  height: 27px;\n  padding: 0;\n  margin: 0 20px 0 50px;\n\n  color: #3498db;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n\n  transition: all 250ms ease-in-out;\n\n  :hover,\n  :focus {\n    color: #39b0ff;\n  }\n`;\n\nexport {\n  ListElement,\n  PhonebookList,\n  ContactItemWrapper,\n  ContactItemName,\n  ContactItemNum,\n  DeleteBtn,\n};","import {\n  ContactItemName,\n  ContactItemNum,\n  ContactItemWrapper,\n  DeleteBtn,\n  ListElement,\n} from 'components/ContactList/ContactList.styled';\nimport {\n  contactsOperations,\n  contactsSelectors,\n} from 'components/redux/contacts';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport default function PhonebookListItem({ id, name, number }) {\n  const dispatch = useDispatch();\n  const isDeleting = useSelector(contactsSelectors.selectIsLoading);\n\n  const deleteContacts = id => {\n    dispatch(contactsOperations.fetchDeleteContacts(id));\n  };\n\n  return (\n    <ListElement>\n      <ContactItemWrapper>\n        <ContactItemName>{name}</ContactItemName>\n        <ContactItemNum href={`tel:${number}`}>{number}</ContactItemNum>\n        <DeleteBtn onClick={() => deleteContacts(id)} disabled={isDeleting}>\n          Delete\n        </DeleteBtn>\n      </ContactItemWrapper>\n    </ListElement>\n  );\n}\n","import { useSelector } from 'react-redux';\n\nimport { PhonebookList } from './ContactList.styled';\n\nimport { filterSelectors } from 'components/redux/filters';\nimport PhonebookListItem from 'components/ContactListItem';\n\nexport default function ContactList() {\n  const filteredContacts = useSelector(filterSelectors.selectFilteredContacts);\n\n  return (\n    <>\n      <PhonebookList>\n        {filteredContacts.map(contact => (\n          <PhonebookListItem key={contact.id} {...contact} />\n        ))}\n      </PhonebookList>\n    </>\n  );\n}\n","import styled from '@emotion/styled';\n\nconst TotalContactsText = styled.p`\n  font-size: 18px;\n`;\n\nconst TotalContactsNum = styled.span`\n  margin-left: 4px;\n  color: blue;\n`;\n\nexport { TotalContactsNum, TotalContactsText };","import { useSelector } from 'react-redux';\n\nimport { TotalContactsText, TotalContactsNum } from './ContactAmount.styled';\n\nimport { contactsSelectors } from 'components/redux/contacts';\n\nexport default function ContactAmount() {\n  const contacts = useSelector(contactsSelectors.selectContacts);\n\n  const contactsAmount = contacts.length;\n\n  return (\n    <TotalContactsText>\n      Contacts amount: <TotalContactsNum>{contactsAmount}</TotalContactsNum>\n    </TotalContactsText>\n  );\n}\n","import styled from '@emotion/styled';\n\nconst NotificationText = styled.p`\n  font-size: 18px;\n`;\n\nexport { NotificationText };","import PropTypes from 'prop-types';\n\nimport { NotificationText } from './Notification.styled';\n\nexport default function Notification({ message }) {\n  return <NotificationText>{message}</NotificationText>;\n}\n\nNotification.propTypes = { message: PropTypes.string.isRequired };\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { Oval } from 'react-loader-spinner';\n\nimport {\n  AppContainer,\n  MainTitle,\n  SecondTitle,\n  OvalWrapper,\n} from 'components/App/App.styled';\n\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport ContactAmount from 'components/ContactAmount';\nimport Notification from 'components/Notification';\n\nimport {\n  contactsOperations,\n  contactsSelectors,\n} from 'components/redux/contacts';\n\nimport { useAuth } from 'hooks';\n\nexport default function Contacts() {\n  const contacts = useSelector(contactsSelectors.selectContacts);\n  const isLoading = useSelector(contactsSelectors.selectIsLoading);\n  const dispatch = useDispatch();\n  const { isRefreshing } = useAuth();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      {!isRefreshing && (\n        <AppContainer>\n          <MainTitle>Phonebook</MainTitle>\n          <ContactForm />\n          <SecondTitle>Contacts</SecondTitle>\n          <Filter />\n          <ContactAmount></ContactAmount>\n          {contacts.length > 0 ? (\n            <ContactList />\n          ) : (\n            <Notification\n              message={'There are no contacts in your phonebook'}\n            ></Notification>\n          )}\n          {isLoading && (\n            <OvalWrapper>\n              <Oval\n                height={80}\n                width={80}\n                color=\"#534da9\"\n                wrapperStyle={{}}\n                wrapperClass=\"\"\n                visible={true}\n                ariaLabel=\"oval-loading\"\n                secondaryColor=\"#4fa94d\"\n                strokeWidth={2}\n                strokeWidthSecondary={2}\n              />\n            </OvalWrapper>\n          )}\n        </AppContainer>\n      )}\n\n      {/* \n      <TaskEditor />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <TaskList /> */}\n    </>\n  );\n}\n"],"names":["AppContainer","styled","MainTitle","SecondTitle","OvalWrapper","FormWrapper","FormInputLabel","FormSubmitBtn","StyledForm","Form","StyledField","Field","StyledErrorMessage","ErrorMessage","selectContacts","state","contacts","items","selectIsLoading","isLoading","addContactSchema","Yup","shape","name","min","max","required","number","integer","positive","ContactForm","useSelector","contactsSelectors","dispatch","useDispatch","initialValues","validationSchema","onSubmit","newContact","resetForm","length","find","contact","toLowerCase","trim","toastifyMessage","contactsOperations","fetchAddContacts","type","placeholder","component","disabled","FilterWrapper","FilterInputLabel","FilterInput","selectFilter","filter","selectFilteredContacts","createSelector","valueFilter","normalizedFilterQuery","includes","Filter","filterSelectors","inputId","nanoid","htmlFor","value","id","onChange","e","filterContact","currentTarget","PhonebookList","ListElement","ContactItemWrapper","ContactItemName","ContactItemNum","DeleteBtn","PhonebookListItem","isDeleting","href","onClick","fetchDeleteContacts","deleteContacts","ContactList","filteredContacts","map","TotalContactsText","TotalContactsNum","ContactAmount","contactsAmount","NotificationText","Notification","message","Contacts","isRefreshing","useAuth","useEffect","fetchContacts","Helmet","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary"],"sourceRoot":""}